{"ast":null,"code":"var _jsxFileName = \"/Users/meridithberk/Desktop/Bootcamp/Repositories/card-game-/src/App.js\";\nimport React from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends: friends,\n      score: 0,\n      topScore: 0,\n      clicked: []\n    };\n\n    this.onclickcard = id => {\n      console.log(\"clicked: \", id);\n\n      if (this.state.clicked.includes(id)) {} else {\n        let tempClicked = this.state.clicked;\n        tempClicked.push(id);\n        this.setState({\n          score: this.state.score++,\n          clicked: tempClicked\n        });\n      } // be sure thay the card was not clicked before in the current game\n      // if not then score++ and shuffle\n      // if yes we need to restart the game === start score 0 and new friends refreshed (no one is clicked)\n\n\n      this.setState({\n        friends: this.state.friends.filter(x => x.id !== id)\n      });\n    };\n  }\n\n  render() {\n    const friends = this.state.friends;\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Friends List\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Score: \", this.state.score, \" - Topscore: \", this.state.topScore)), friends.map(friend => React.createElement(FriendCard, {\n      onclickcard: this.onclickcard,\n      id: friend.id,\n      name: friend.name,\n      image: friend.image,\n      key: friend.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/meridithberk/Desktop/Bootcamp/Repositories/card-game-/src/App.js"],"names":["React","FriendCard","Wrapper","friends","App","Component","state","score","topScore","clicked","onclickcard","id","console","log","includes","tempClicked","push","setState","filter","x","render","map","friend","name","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNH,MAAAA,OAAO,EAAEA,OADH;AAENI,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,QAAQ,EAAE,CAHJ;AAINC,MAAAA,OAAO,EAAE;AAJH,KAD0B;;AAAA,SAQlCC,WARkC,GAQrBC,EAAE,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,EAAzB;;AAEA,UAAI,KAAKL,KAAL,CAAWG,OAAX,CAAmBK,QAAnB,CAA4BH,EAA5B,CAAJ,EAAoC,CAKnC,CALD,MAMI;AACF,YAAII,WAAW,GAAG,KAAKT,KAAL,CAAWG,OAA7B;AACAM,QAAAA,WAAW,CAACC,IAAZ,CAAiBL,EAAjB;AAEA,aAAKM,QAAL,CAAc;AACZV,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,EADK;AAEZE,UAAAA,OAAO,EAAEM;AAFG,SAAd;AAKD,OAlBgB,CAmBjB;AACA;AACA;;;AAGA,WAAKE,QAAL,CAAc;AAAEd,QAAAA,OAAO,EAAE,KAAKG,KAAL,CAAWH,OAAX,CAAmBe,MAAnB,CAA0BC,CAAC,IAAIA,CAAC,CAACR,EAAF,KAASA,EAAxC;AAAX,OAAd;AACD,KAjCiC;AAAA;;AAmClCS,EAAAA,MAAM,GAAI;AAAA,UACAjB,OADA,GACY,KAAKG,KADjB,CACAH,OADA;AAER,WACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKG,KAAL,CAAWC,KAAvB,mBAA2C,KAAKD,KAAL,CAAWE,QAAtD,CADF,CAHF,EAOGL,OAAO,CAACkB,GAAR,CAAYC,MAAM,IAEnB,oBAAC,UAAD;AACE,MAAA,WAAW,EAAE,KAAKZ,WADpB;AAEE,MAAA,EAAE,EAAEY,MAAM,CAACX,EAFb;AAGE,MAAA,IAAI,EAAEW,MAAM,CAACC,IAHf;AAIE,MAAA,KAAK,EAAED,MAAM,CAACE,KAJhB;AAKE,MAAA,GAAG,EAAEF,MAAM,CAACX,EALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,CAPH,CADA;AAoBE;;AAzD8B;;AA4DlC,eAAeP,GAAf","sourcesContent":["import React from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\n\nclass App extends React.Component {\nstate = {\n  friends: friends,\n  score: 0,\n  topScore: 0,\n  clicked: []\n}\n\nonclickcard= id => {\n  console.log(\"clicked: \", id)\n\n  if (this.state.clicked.includes(id)){\n\n   \n\n\n  }\n  else{\n    let tempClicked = this.state.clicked\n    tempClicked.push(id)\n\n    this.setState({\n      score: this.state.score++,\n      clicked: tempClicked\n\n    })\n  }\n  // be sure thay the card was not clicked before in the current game\n  // if not then score++ and shuffle\n  // if yes we need to restart the game === start score 0 and new friends refreshed (no one is clicked)\n\n\n  this.setState({ friends: this.state.friends.filter(x => x.id !== id )});\n}\n\nrender () {\n  const { friends } = this.state\n  return (\n  <Wrapper>\n    <h1 className=\"title\">Friends List</h1>\n\n    <div>\n      <h1>Score: {this.state.score} - Topscore: {this.state.topScore}</h1>\n    </div>\n\n    {friends.map(friend => (\n\n    <FriendCard\n      onclickcard={this.onclickcard}\n      id={friend.id}\n      name={friend.name}\n      image={friend.image}\n      key={friend.id}\n     \n    />\n    ))}\n  </Wrapper>\n  )};\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}